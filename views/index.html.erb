<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>MMO Snake</title>
  <style>
    body {
      background-color: #fff;
      font-family: 'Trebuchet MS', 'Helvetica Neue', Arial, Sans-serif;
      color: #222;
    }

    h1 {
      font-weight: bold;  
      padding: 10px;
      padding-bottom: 0px;
      margin-bottom: 2px;
      text-align: center;
      font-size: 32px;
    }

    a, a:active, a:visited {
      color: #222;
    }

    a:hover {
      color: #a00;
    }

    #ribbon {
      position: absolute;
      top: 0;
      right: 0;
      border: 0;
    }

    #scoreboard {
      text-align: center;
      padding: 0;
      padding-bottom: 12px;
    }

    #stage {
      display: block;
      margin-left: auto;
      margin-right: auto;
    }

    p {
      text-align: center;
      font-weight: normal;
      font-size: 11px;
    }
  </style>
</head>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
<script>
  (function() {
    var SocketKlass = "MozWebSocket" in window ? MozWebSocket : WebSocket;

    if (SocketKlass) {
      $(document).ready(function() {

        var animate, canvas, connect, context, id, sendDirection, server;
        server = null;
        canvas = $("#stage");
        context = canvas.get(0).getContext("2d");
        id = null;
        sendDirection = function(direction) {
          if (server) {
            return server.send(JSON.stringify({
              'type': 'direction',
              'value': direction
            }));
          }
        };
        animate = function(snakes) {
          var element, snake, x, y, _i, _len, _results;
          context.fillStyle = 'rgb(230,230,230)';
          for (x = 0; x <= 49; x++) {
            for (y = 0; y <= 49; y++) {
              context.fillRect(x * 10, y * 10, 9, 9);
            }
          }
          _results = [];
          for (_i = 0, _len = snakes.length; _i < _len; _i++) {
            snake = snakes[_i];
            context.fillStyle = snake.id === id ? 'rgb(170,0,0)' : 'rgb(0,0,0)';
            if (snake.id === id) {
              $("#kills").html("Kills: " + snake.kills);
              $("#deaths").html("Deaths: " + snake.deaths);
            }
            _results.push((function() {
              var _j, _len2, _ref, _results2;
              _ref = snake.elements;
              _results2 = [];
              for (_j = 0, _len2 = _ref.length; _j < _len2; _j++) {
                element = _ref[_j];
                x = element[0] * 10;
                y = element[1] * 10;
                _results2.push(context.fillRect(x, y, 9, 9));
              }
              return _results2;
            })());
          }
          return _results;
        };
        connect = function() {
          server = new SocketKlass('ws://' + window.location.host + '/socket');
          return server.onmessage = function(event){
            message = JSON.parse(event.data);
            switch (message.type) { 
              case 'identify':
                profile = message.value
                return id = profile.id;
              case 'snakes':
                return animate(message.value);
            }
          }
        };
        connect();

        return $(document).keydown(function(event) {
          var key;
          key = event.keyCode ? event.keyCode : event.which;
          switch (key) {
            case 37:
              return sendDirection("left");
            case 38:
              return sendDirection("up");
            case 39:
              return sendDirection("right");
            case 40:
              return sendDirection("down");
          }
        });
      });

    } else {
      alert("Your browser does not support websockets.");
    }
  }).call(this);

</script>
<body>
  <h1>Snake</h1>

  <div id="scoreboard">
    <span id="kills">Kills: 0</span> - 
    <span id="deaths">Deaths: 0</span>
  </div>

  <canvas id="stage" width="500" height="500">
    Canvas not supported.
  </canvas>
</body>
</html> 